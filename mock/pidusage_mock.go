// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DemoHn/apm/mod/process (interfaces: IPidUsage)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	process "github.com/DemoHn/apm/mod/process"
	gomock "github.com/golang/mock/gomock"
)

// MockIPidUsage is a mock of IPidUsage interface
type MockIPidUsage struct {
	ctrl     *gomock.Controller
	recorder *MockIPidUsageMockRecorder
}

// MockIPidUsageMockRecorder is the mock recorder for MockIPidUsage
type MockIPidUsageMockRecorder struct {
	mock *MockIPidUsage
}

// NewMockIPidUsage creates a new mock instance
func NewMockIPidUsage(ctrl *gomock.Controller) *MockIPidUsage {
	mock := &MockIPidUsage{ctrl: ctrl}
	mock.recorder = &MockIPidUsageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIPidUsage) EXPECT() *MockIPidUsageMockRecorder {
	return m.recorder
}

// GetPID mocks base method
func (m *MockIPidUsage) GetPID() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPID")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetPID indicates an expected call of GetPID
func (mr *MockIPidUsageMockRecorder) GetPID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPID", reflect.TypeOf((*MockIPidUsage)(nil).GetPID))
}

// GetStat mocks base method
func (m *MockIPidUsage) GetStat() (*process.PidStat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStat")
	ret0, _ := ret[0].(*process.PidStat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStat indicates an expected call of GetStat
func (mr *MockIPidUsageMockRecorder) GetStat() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStat", reflect.TypeOf((*MockIPidUsage)(nil).GetStat))
}

// SetPID mocks base method
func (m *MockIPidUsage) SetPID(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetPID", arg0)
}

// SetPID indicates an expected call of SetPID
func (mr *MockIPidUsageMockRecorder) SetPID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPID", reflect.TypeOf((*MockIPidUsage)(nil).SetPID), arg0)
}
